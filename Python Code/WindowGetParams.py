# -*- coding: iso-8859-15 -*-
# generated by wxGlade 0.6.3 on Mon Jan 17 15:41:18 2011

import wx
from WindowObjectPicker import WindowObjectPicker
# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode

# end wxGlade

def convertParamType(x):
    if x[0] == "[" and x[-1] == "]": # If this is a parsed object it will be marked with bracets
        oname = x[1:-1]
        foundobj = wx.GetApp().GetBenchWidget().findObjectByName(oname)
        if foundobj == None: # If we cant find the object on the bench
            return None # Just return null.
        else:
            return foundobj.getObject()
    else:
        return eval(x) # Evaluate the expression otherwise

		
class FieldButton(wx.Button):
    def SetMyTextBox(self, tbox):
        self.tbox = tbox
    def GetMyTextBox(self):
        return self.tbox


class WindowGetParams(wx.Dialog):
    def __init__(self, paramaters, *args, **kwds):
        # begin wxGlade: WindowGetParams.__init__
        kwds["style"] = wx.DEFAULT_DIALOG_STYLE|wx.STAY_ON_TOP
        wx.Dialog.__init__(self, *args, **kwds)
        self.paramaters = paramaters
        self.paramLabels = []
        self.paramText = []
        self.paramBtn = []

        for p in paramaters:
            self.paramLabels.append( wx.StaticText(self, -1, p) )
            t = wx.TextCtrl(self, -1, "None")
            self.paramText.append( t )

            b = FieldButton(self, -1, "Pick Existing Object")
            b.SetMyTextBox(t)
            self.paramBtn.append( b )
            b.Bind(wx.EVT_BUTTON, self.GetObjClick)

        self.btnOK = wx.Button(self, -1, "Ok")
        self.btnOK.Bind(wx.EVT_BUTTON, self.OKClick)

        self.__set_properties()

        if len(paramaters) == 0:
            self.txt = wx.StaticText(self, -1, "No paramaters needed.")

        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: WindowGetParams.__set_properties
        self.SetTitle("Input Method Paramaters")
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: WindowGetParams.__do_layout
        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        grid_sizer_1 = wx.GridSizer( len(self.paramaters) , 3, 0, 0)

        for i in range(len(self.paramaters)):
            grid_sizer_1.Add(self.paramLabels[i], 0, 0, 0)
            grid_sizer_1.Add(self.paramText[i], 0, 0, 0)
            grid_sizer_1.Add(self.paramBtn[i], 0, 0, 0)

        if len(self.paramaters) == 0:
            grid_sizer_1.Add(self.txt)

        sizer_2.Add(grid_sizer_1, 1, wx.EXPAND, 0)
        sizer_2.Add(self.btnOK, 0, 0, 0)

        sizer_2.Add( wx.StaticText(self, -1, "To enter strings use quotes  \"like me\" ") )

        self.SetSizer(sizer_2)
        sizer_2.Fit(self)
        self.Layout()
        # end wxGlade
    def getParams(self):
        vals = []
        for ctl in self.paramText:
            vals.append( convertParamType(ctl.GetValue()) )
        return vals

    def OKClick(self, event):

        self.EndModal(1)

    def GetObjClick(self, event):
        dlg = WindowObjectPicker(self)
        if dlg.ShowModal() == 1:
            item = dlg.GetSelected()
            event.GetEventObject().GetMyTextBox().ChangeValue(item)


# end of class WindowGetParams
